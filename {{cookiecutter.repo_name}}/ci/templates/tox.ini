[tox]
envlist =
    clean,
    check,
{%- if cookiecutter._sphinx_docs == "yes" %}
    docs,
{%- endif %}
{% raw %}{% for env in tox_environments|sort %}
    {{ env }},
{% endfor %}{% endraw %}
    report

[testenv]
{%- if cookiecutter._c_extension_test_pypi == 'yes' %}
wheel = true
{%- endif %}
basepython =
    {bootstrap,clean,check,report
        {%- if cookiecutter._sphinx_docs == "yes" -%}
            ,docs
        {%- endif -%}
        {%- if cookiecutter._codecov == 'yes' -%}
            ,codecov
        {%- endif -%}
        {%- if cookiecutter._coveralls == 'yes' -%}
            ,coveralls
            {%- if cookiecutter._c_extension_support != "no" -%}
                ,extension-coveralls
            {%- endif -%}
        {%- endif -%}
    }: {env:TOXPYTHON:python3}
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
passenv =
    *
deps =
    pytest
    {%- if cookiecutter._travis == 'yes' %}
    pytest-travis-fold
    {%- endif %}
    {%- if cookiecutter._test_matrix_separate_coverage == 'no' %}
    pytest-cov
    {%- endif %}
commands =
{%- if cookiecutter._c_extension_support != "no" %}
    python setup.py clean --all build_ext --force --inplace
{%- endif %}
    {%- if cookiecutter._test_matrix_separate_coverage == 'yes' %}
    {posargs:pytest -vv --ignore=src}
    {%- else %}
    {posargs:pytest --cov --cov-report=term-missing -vv --ignore=src}
    {%- endif %}

[testenv:bootstrap]
deps =
    jinja2
    matrix
skip_install = true
commands =
    python ci/bootstrap.py --no-env

[testenv:check]
deps =
    docutils
{%- if cookiecutter._setup_py_uses_setuptools_scm == 'no' %}
    check-manifest
{%- endif %}
{%- if cookiecutter._linter == "flake8" %}
    flake8
{%- else %}
    pylama
{%- endif %}
{%- if cookiecutter._repo_hosting_domain != "no" %}
    readme-renderer
{%- endif %}
    pygments
    isort
{%- if cookiecutter._setup_py_uses_setuptools_scm == 'yes' %}
    setuptools-scm
{%- endif %}
skip_install = true
commands =
{%- if cookiecutter._repo_hosting_domain != "no" %}
    python setup.py check --strict --metadata --restructuredtext
{%- endif %}
{%- if cookiecutter._setup_py_uses_setuptools_scm == 'no' %}
    check-manifest {toxinidir}
{%- endif %}
{%- if cookiecutter._linter == "flake8" %}
    flake8
{%- else %}
    pylama
{%- endif %}
    isort --verbose --check-only --diff --filter-files .
{%- if cookiecutter._c_extension_support == 'cython' %}

[testenv:cythonize]
basepython = {env:TOXPYTHON:python}
deps =
    Cython
skip_install = true
commands =
    {posargs:python setup.py clean --all build_ext --force}
{%- endif %}
{% if cookiecutter._sphinx_docs == "yes" %}

[testenv:docs]
usedevelop = true
{%- if cookiecutter._setup_py_uses_setuptools_scm == 'yes' %}
install_command =
    python -m pip install --no-use-pep517 {opts} {packages}
{%- endif %}
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
{%- if cookiecutter._sphinx_doctest == "yes" %}
    sphinx-build {posargs:-E} -b doctest docs dist/docs
{%- endif %}
    sphinx-build {posargs:-E} -b html docs dist/docs
    sphinx-build -b linkcheck docs dist/docs
{%- endif %}
{%- if cookiecutter._coveralls == 'yes' %}

[testenv:coveralls]
deps =
    coveralls
skip_install = true
commands =
    coveralls{%- if cookiecutter._c_extension_support != "no" %} --merge=extension-coveralls.json{% endif %} []
{% if cookiecutter._c_extension_support != "no" %}

[testenv:extension-coveralls]
deps =
    cpp-coveralls
skip_install = true
commands =
    coveralls --build-root=. --include=src --dump=extension-coveralls.json []
{%- endif %}
{%- endif %}
{% if cookiecutter._codecov == 'yes' %}

[testenv:codecov]
deps =
    codecov
skip_install = true
commands =
    codecov {%- if cookiecutter._c_extension_support == 'yes' %} --gcov-root=.{% endif %} []
{%- endif %}
{% raw %}
[testenv:report]
deps = coverage
skip_install = true
commands =
    coverage report
    coverage html

[testenv:clean]
commands = coverage erase
skip_install = true
deps = coverage
{% for env, config in tox_environments|dictsort %}

[testenv:{{ env }}]
basepython = {env:TOXPYTHON:{{ env.split("-")[0] if env.startswith("pypy") else "python{0[2]}.{0[3]}".format(env) }}}
{% if config.cover or config.env_vars %}
setenv =
    {[testenv]setenv}
{% endif %}
{% for var in config.env_vars %}
    {{ var }}
{% endfor %}
{% if config.cover %}
{%- endraw -%}
{%- if cookiecutter._c_extension_support in ['yes', 'cython'] %}
    SETUPPY_EXT_COVERAGE=yes
{%- endif %}
{%- raw %}
usedevelop = true
commands =
{%- endraw -%}
{%- if cookiecutter._c_extension_support != "no" %}
    python setup.py clean --all build_ext --force --inplace
{%- endif %}
    {posargs:pytest --cov --cov-report=term-missing -vv}
{%- raw %}
{% endif %}
{% if config.cover or config.deps %}
deps =
    {[testenv]deps}
{% endif %}
{% if config.cover %}
{%- endraw -%}
    pytest-cov
{%- raw %}
{% endif %}
{% for dep in config.deps %}
    {{ dep }}
{% endfor -%}
{% endfor -%}
{% endraw -%}
