{% if cookiecutter._repo_hosting == 'github.com' -%}
github_url = "https://{{ cookiecutter._repo_hosting_domain }}/{{ cookiecutter._repo_username }}/{{ cookiecutter.repo_name }}/"

{% endif -%}
[version]
current = "{{ cookiecutter._version }}"
regex = '(?P<major>\d+)\.(?P<minor>\d+)\.(?P<patch>\d+)'

[git]
message_template = "Bump to {new_version}"
tag_template = "v{new_version}"

[[file]]
src = "setup.py"
{%- if cookiecutter._setup_py_uses_setuptools_scm == 'yes' %}
search = "'fallback_version': '{current_version}'"
{%- else %}
search = "version='{current_version}'"
{%- endif %}
{%- if cookiecutter._repo_hosting_domain == "github.com" %}

[[file]]
src = "README.rst"
search = "/v{current_version}.svg"

[[file]]
src = "README.rst"
search = "/v{current_version}...{{ cookiecutter._repo_main_branch }}"
{%- endif %}
{%- if cookiecutter._sphinx_docs == "yes" %}

[[file]]
src = "docs/conf.py"
search = "version = release = '{current_version}'"
{%- endif %}

[[file]]
src = "src/{{ cookiecutter.package_name }}/__init__.py"
search = "__version__ = '{current_version}'"

[[before_commit]]
name = "check changelog"
cmd = "grep -q {new_version} CHANGELOG.rst"

# Or run some commands after the git tag and the branch
# have been pushed:
#  [[after_push]]
#  name = "publish"
#  cmd = "./publish.sh"
